import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as r,a as o,b as a,o as g}from"./app-BImRTQmU.js";const l={};function i(e,s){return g(),n("div",null,[s[0]||(s[0]=r("p",null,"计算机系统结构填空题",-1)),o(" more "),s[1]||(s[1]=a('<ol><li>多处理机的操作系统有<strong>主从型</strong>、<strong>各自独立型</strong>和<strong>浮动型</strong>。</li><li>始终只让第K+1条指令的“分析”与第K条指令的“执行”在时间上重叠的方式称为<strong>一次重叠</strong>。</li><li>互连函数表示互连网络的出端号和入端号的一一对应关系，其表示方法有<strong>输入输出对应表示法</strong>、<strong>循环表示法</strong>和<strong>函数表示法</strong>。</li><li>多立方体网络的控制有<strong>级控制</strong>、<strong>单元控制</strong>和<strong>部分级控制</strong>。</li><li>数组多路通道宜于连接多台<strong>高速设备</strong>，通道“数据宽度”为<strong>定长块</strong>。</li><li>Cache选用何种替换策略，最主要的影响因素是<strong>命中率</strong>。</li><li>通道在数据传送期里，按信息传送方式不同，可以有<strong>字节多路</strong>、<strong>数组多路</strong>和<strong>选择通道</strong>三类。</li><li>典型单处理机属于<strong>单指令流单执行流</strong>，带指令级多道程序的单处理机属于<strong>多指令流单执行流</strong>，多处理机属于<strong>多指令流多执行流</strong>。</li><li>多处理机的两类耦合是<strong>松耦合</strong>和<strong>紧耦合</strong>。</li><li>解决Cache与主存内容不一致问题的方法一般有<strong>写回法</strong>和<strong>写直达法</strong>。</li><li>I/O设备主要解决的是<strong>CPU</strong>、<strong>主存</strong>和I/O设备在速度上的巨大差异。</li><li>评价存储器性能的基本要求是<strong>大容量</strong>、<strong>高速度</strong>和<strong>低价格</strong>。</li><li>指令系统编码格式有<strong>变长编码</strong>、<strong>固定长编码</strong>和<strong>混合编码</strong>三种。</li><li>系列机软件兼容必须做到<strong>向后</strong>兼容，尽可能争取<strong>向前</strong>兼容。</li><li>同一单元在先的指令先写入，在后端指令才写入的关联为<strong>写一写相关</strong>，对<strong>同一</strong>单元要求在先的指令先读出，在后端指令才写入的相关为<strong>先读后写相关</strong>。</li><li>高速缓冲存储器的Cache--主存存储层次，从CPU角度来看，速度接近于<strong>Cache</strong>，容量却是<strong>主存</strong>的。</li><li>目的程序接入主存时，由装入程序用软件方法把目的程序的逻辑地址变换成物理地址，程序执行时，物理地址不再改变，称这种定位技术为<strong>静态再定位</strong>。</li><li><strong>数据表示</strong>指的是能由计算机硬件识别和引用的数据类型，表现在它有对这种类型的数据进行操作的指令和运算部件。</li><li>解题中具有可以同时进行运算或操作的特性，称为<strong>并行性</strong>。</li><li><strong>统一高级语言</strong>软件移植技术应用于结构相同以至完全不同的机器之间高级语言程序的软件设计。</li><li>Amdahl定律可以用于确定对系统中<strong>性能瓶颈</strong>采取性能措施提高速度后系统性能改进的程度。</li><li>用微程序直接解释另一种机器指令系统的方法称为<strong>仿真</strong>。</li><li>数据流程序图中的弧代表数据令牌在结点间的<strong>流向</strong>，通过<strong>令牌</strong>沿弧移动端先后过程反映此数据流程序图的执行过程。</li><li>数据驱动的数据流方式数据是以<strong>数据令牌</strong>方式直接在指令之间传递的。</li><li>数据驱动，其操作是按输入数据<strong>可用性</strong>决定的次序进行的。</li><li>从语义上讲，数据流是基于<strong>异步性</strong>和<strong>函数性</strong>的一种计算模型。</li><li>根据计算机所用规约方式的不同，有<strong>串归约机</strong>和<strong>图归约机</strong>两类。</li><li>根据对数据令牌处理的方式不同，可以把数据流计算机的结构分成<strong>静态</strong>和<strong>动态</strong>两类。</li><li>为了使任何时候所需的信息都只用一个存储周期访问到，要求信息在主存中存放的地址必须是该信息宽度（字节数）的<strong>整数倍</strong>。</li><li>指令系统的设计包括<strong>指令的功能</strong>和<strong>指令格式</strong>的设计。</li><li>指令的动态调度是指在<strong>保持数据流</strong>和异常行为的情况下，通过硬件对<strong>指令执行顺序</strong>进行重新安排，以提高流水的利用率且减少停顿现象，是由硬件在程序实际运行时实施的。</li><li>运算中的精度丢失是运算中算术右移出计算机字长，使有效数字丢失造成都。</li><li><strong>指令</strong>的静态调度是指依靠编译器对代码进行静态调度，以减少相关和冲突。它不是在程序执行的过程中、而是在<strong>编译</strong>期间进行代码调度和优化的。</li><li>数据宽度是指I/O设备取得<strong>I/O总线</strong>后所传送数据的总量；数据通路宽度是<strong>数据总线</strong>的物理宽度。</li><li>RISC的思想精华是<strong>减少指令平均执行周期</strong>。</li><li>通用寄存器组的相关有两种解决办法，分别是<strong>推后分析</strong>和<strong>设置相关专用通路</strong>。</li><li>有<strong>堆栈数据表示</strong>的计算机称为堆栈计算机。</li><li>浮点数尾数基值取大，会<strong>扩大</strong>浮点数的表示范围，<strong>增加</strong>可表示数的个数。</li><li>全局性相关是指已经进入流水线的<strong>转移指令</strong>和<strong>其后续指令</strong>之间的相关。</li><li>进行仿真的机器称为<strong>宿主机</strong>，被仿真的机器称为<strong>目标机</strong>。</li><li>自定义数据表示包括<strong>数据描述符</strong>和<strong>标志符数据表示</strong>两大类。</li><li>恒置“1”法是将计算机运算的规定字长的<strong>最低位</strong>恒置为“1”。</li><li>浮点数尾数基值增大，可使运算中的精度损失<strong>减小</strong>，可表示数的精度<strong>下降</strong>。</li><li>高级数据表示的引入的基本原则是：一是看系统的<strong>效率</strong>是否提高，二是看引入数据表示后其<strong>通用性</strong>和<strong>利用率</strong>是否提高。</li><li>N个处理单元的混洗交换网络中，最远的两个入、出端的二进制编号是<strong>全0</strong>和<strong>全1</strong>，其最大距离为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>N</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2log_2N-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</li><li>阵列处理机使用简单、规整的<strong>互连网络</strong>来确定处理单元的连接。</li><li>Shuffle函数是<strong>不可逆</strong>函数。</li><li>向量处理机是有向量数据表示的处理机，分<strong>向量流水处理机</strong>和<strong>阵列处理机</strong>。</li><li>交换方法中的三种组合主要有<strong>包交换</strong>、<strong>线路交换</strong>及<strong>线路与包交换</strong>。</li><li>常见的数据路由的功能有<strong>循环</strong>、<strong>置换</strong>、<strong>均匀混洗</strong>、<strong>超立方体路由功能</strong>、<strong>广播和传播</strong>。</li><li>阵列处理机有两种构形，差别主要在于<strong>存储器的组成方式</strong>和<strong>互连网络的作用</strong>不同。</li><li>根据未来实际使用情况将未来的近期里不用的页替换出去，一定会有最高的主存命中率，这种算法称为<strong>优化替换</strong>算法。</li><li>解决重叠相关处理的两种基本方法是<strong>推后分析k+1</strong>和<strong>设置相关专用通路</strong>。</li><li>机器语言程序中邻近指令之间出现了关联，为防止出错让它们不能同时解释的现象称为发生了<strong>相关</strong>。</li><li>流水线满负责每隔<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\\Delta t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Δ</span><span class="mord mathnormal">t</span></span></span></span>流出一个结果时所达到的吞吐率称为<strong>最大吞吐率</strong>。</li><li>为同时解释相邻两条以上的指令，常用的控制方式是<strong>重叠</strong>和<strong>流水</strong>。</li><li>指令相关是因为机器指令<strong>允许修改</strong>而引起的。</li><li>流水线中经过时间最长的子过程称为<strong>瓶颈子过程</strong>。</li><li>流水线输出端流出的顺序与输入端任务流入的顺序可以不同，允许后进入流水线的任务先完成。这种流水线又称为无序流水线、<strong>错序流水线</strong>和<strong>异步流水线</strong>。</li><li>为控制N个设备，定时查询需<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>+</mo><mo stretchy="false">[</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">2+[log_2N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span>根控制线，独立请求需<strong>2N+1</strong>根控制线。</li><li><strong>存储体系</strong>是让构成存储系统的几种不同的存储器之间，配上辅助软、硬件，使之从应用程序员角度来看，它们逻辑上是一个整体。</li><li>虚地址Cache是将<strong>Cache-主存-辅存</strong>直接构成三级存储层次形式。</li><li>物理地址Cache是由<strong>Cache-主存</strong>和<strong>主存-辅存</strong>两个独立的存储层次组成的。</li><li>虚拟存储器通过增设<strong>地址映像表机构</strong>来实现程序在主存中的定位。</li><li>页式虚拟存储器中，影响命中率的因素除<strong>替换算法</strong>外，还有地址流、<strong>页面</strong>大小、主存容量等。</li><li>虚拟存储器对<strong>应用</strong>程序员是透明的，对<strong>系统</strong>程序员是不透明的。</li><li>N个结点的立方体单级网络最大距离为<strong>72</strong>。</li><li>松耦合多处理机可以有<strong>非层次型</strong>和<strong>层次型</strong>两种构形。</li><li>并行程序的特点是这些进程在时间上<strong>重叠</strong>地执行。</li><li>在多处理机上，各处理机的程序段并行必然是异步的，出现的3种数据相关分别是<strong>数据相关</strong>、<strong>数据反相关</strong>和<strong>数据输出</strong>相关。</li><li>并行任务可在程序中用FORK语句<strong>派生并行任务</strong>，用JOIN语句<strong>对多个并发任务汇合</strong>。</li><li>机群系统主机间的通信主要采用<strong>消息传递</strong>。</li><li>多处理机的互连一般采用<strong>总线</strong>、<strong>交叉开关</strong>、<strong>环形互连</strong>或多端口存储器等几种形式。</li><li>目录表的具体做法又可以分为3种，分别是：<strong>全映像目录表</strong>、<strong>有限目录表法</strong>、<strong>链式目录表法</strong>。</li><li>阵列处理机使用简单、规整的<strong>互连网络</strong>来确定处理单元的连接。</li><li>多处理机有3种形式，分别是<strong>同构型</strong>、<strong>异构型</strong>和分布型。</li><li>紧耦合处理机间通过<strong>中断信号</strong>互连网络，由一台处理机向另一台处理机发送，实现处理机间的进程同步。</li><li>中断系统的软、硬件功能分配实质上是<strong>中断处理程序软件</strong>和<strong>中断响应硬件</strong>的功能分配。</li><li>能并行读出多个CPU字的单体多字和多体单字、多体多字的交叉访问主存系统被称为<strong>并行主存系统</strong>。</li><li>IBM370把机器校验位分成<strong>紧急的</strong>和<strong>可抑制的</strong>两种。</li><li>总线控制机构基本集中在一起，无论是在连接到总线的一个部件中，还是在单独的硬件中，都被称为<strong>集中式控制</strong>，而总线控制逻辑分散连到总线的各个部件时，都称为<strong>分布式总线控制</strong>。</li><li>Amdahl定律可用于确定对系统中性能<strong>瓶颈</strong>部件采用措施提高速度后系统性能改进的程度。</li><li>用微程序直接解释另一种机器指令系统的方法就称为<strong>仿真</strong>。</li><li>用机器语言程序解释实现软件移植的方法称为<strong>模拟</strong>。</li></ol>',1))])}const c=t(l,[["render",i],["__file","填空题.html.vue"]]),h=JSON.parse('{"path":"/article/%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/%E5%A1%AB%E7%A9%BA%E9%A2%98.html","title":"计算机系统结构填空题","lang":"zh-CN","frontmatter":{"title":"计算机系统结构填空题","index":true,"category":["理论"],"description":"计算机系统结构填空题","head":[["meta",{"property":"og:url","content":"https://java-st.blog.csdn.net/my-blog/article/%E7%90%86%E8%AE%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/%E5%A1%AB%E7%A9%BA%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"计算机系统结构填空题"}],["meta",{"property":"og:description","content":"计算机系统结构填空题"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-08T13:42:13.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-08T13:42:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"计算机系统结构填空题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-08T13:42:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"宋涛\\",\\"url\\":\\"https://java-st.blog.csdn.net/\\"}]}"]]},"headers":[],"git":{"createdTime":1741067585000,"updatedTime":1741441333000,"contributors":[{"name":"stao","username":"stao","email":"2944922490@qq.com","commits":2,"url":"https://github.com/stao"}]},"readingTime":{"minutes":9.59,"words":2878},"filePathRelative":"article/理论/计算机系统结构/填空题.md","localizedDate":"2025年3月4日","excerpt":"<p>计算机系统结构填空题</p>\\n","autoDesc":true}');export{c as comp,h as data};
