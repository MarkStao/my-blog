import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as s,a as l,b as n,o as t}from"./app-BImRTQmU.js";const h={};function r(p,i){return t(),a("div",null,[i[0]||(i[0]=s("p",null,"ZooKeeper 是一个分布式协调服务，主要用于保证分布式系统中关键功能的一致性，如分布式锁、服务注册与发现等。它由 Apache 基金会维护，经常被用作分布式系统的基础组件。",-1)),i[1]||(i[1]=s("p",null,"本文系统整理了 Zookeeper 的核心概念、命令操作及常见应用场景，帮助你从零开始理解和使用 ZooKeeper。",-1)),l(" more "),i[2]||(i[2]=n(`<h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><ol><li><a href="#1-zookeeper-%E7%AE%80%E4%BB%8B">ZooKeeper 简介</a></li><li><a href="#2-zookeeper-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE">ZooKeeper 安装与配置</a></li><li><a href="#3-zookeeper-%E7%9A%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5">ZooKeeper 的核心概念</a></li><li><a href="#4-zookeeper-%E7%9A%84%E8%BF%90%E4%BD%9C%E6%9C%BA%E5%88%B6">ZooKeeper 的运作机制</a></li><li><a href="#5-zookeeper-%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4">ZooKeeper 的常用命令</a></li><li><a href="#6-java-%E4%B8%AD%E7%9A%84-zookeeper-%E5%AE%A2%E6%88%B7%E7%AB%AF">Java 中的 ZooKeeper 客户端</a></li><li><a href="#7-zookeeper-%E7%9A%84%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF">ZooKeeper 的典型应用场景</a></li><li><a href="#8-zookeeper-%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86">ZooKeeper 集群管理</a></li><li><a href="#9-zookeeper-%E7%9A%84%E9%AB%98%E7%BA%A7%E5%8A%9F%E8%83%BD">ZooKeeper 的高级功能</a></li><li><a href="#10-zookeeper-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%B8%8E%E4%BC%98%E5%8C%96">ZooKeeper 常见问题与优化</a></li><li><a href="#11-%E6%80%BB%E7%BB%93">总结</a></li></ol><hr><h2 id="_1-zookeeper-简介" tabindex="-1"><a class="header-anchor" href="#_1-zookeeper-简介"><span>1. ZooKeeper 简介</span></a></h2><h3 id="什么是-zookeeper" tabindex="-1"><a class="header-anchor" href="#什么是-zookeeper"><span>什么是 ZooKeeper？</span></a></h3><p>ZooKeeper 是一个分布式开源协调服务，主要解决分布式系统中的数据一致性问题。它提供了分布式数据存储与管理的功能，适用于需要高性能、高可用的一致性服务。</p><p>核心特性：</p><ul><li><strong>分布式配置管理</strong>：存储和更新配置信息。</li><li><strong>分布式锁</strong>：可实现分布式环境下的锁机制。</li><li><strong>节点可用性检测</strong>：监控分布式系统的节点状态。</li><li><strong>高一致性</strong>：ZooKeeper 的 Paxos-like 协议保证了数据一致性。</li></ul><hr><h2 id="_2-zookeeper-安装与配置" tabindex="-1"><a class="header-anchor" href="#_2-zookeeper-安装与配置"><span>2. ZooKeeper 安装与配置</span></a></h2><h3 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h3><ol><li><p>下载 ZooKeeper：</p><ul><li>前往 Apache 官方下载：<a href="https://zookeeper.apache.org/releases.html" target="_blank" rel="noopener noreferrer">ZooKeeper 下载地址</a></li><li>选择稳定版本并解压。</li></ul></li><li><p>环境依赖：</p><ul><li>Java 环境（JDK 1.8 或更高版本）。</li><li>集群部署需要多台服务器。</li></ul></li></ol><h3 id="配置单机模式" tabindex="-1"><a class="header-anchor" href="#配置单机模式"><span>配置单机模式</span></a></h3><ol><li><p>修改配置文件 <code>conf/zoo.cfg</code>：</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ZooKeeper 基本配置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">tickTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">2000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">dataDir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">/tmp/zookeeper</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">clientPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">2181</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动 ZooKeeper：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/zkServer.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>验证启动：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/zkCli.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:2181</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><hr><h2 id="_3-zookeeper-的核心概念" tabindex="-1"><a class="header-anchor" href="#_3-zookeeper-的核心概念"><span>3. ZooKeeper 的核心概念</span></a></h2><table><thead><tr><th>核心概念</th><th>描述</th></tr></thead><tbody><tr><td><strong>节点 (ZNode)</strong></td><td>ZooKeeper 中的数据结构，类似文件系统的树形结构，可以存储数据或子节点。</td></tr><tr><td><strong>会话 (Session)</strong></td><td>客户端与 ZooKeeper 服务端之间的连接生命周期。</td></tr><tr><td><strong>事务 ID (ZXID)</strong></td><td>每个更新都分配一个唯一的 ZXID，确保更新的顺序性。</td></tr><tr><td><strong>Watch</strong></td><td>一种触发机制，当指定节点发生变化时通知客户端。</td></tr></tbody></table><h3 id="znode-类型" tabindex="-1"><a class="header-anchor" href="#znode-类型"><span>ZNode 类型</span></a></h3><ol><li><p><strong>永久节点 (Persistent)</strong>：</p><ul><li>节点创建后，即使客户端断开连接或退出，节点仍然存在。</li></ul></li><li><p><strong>临时节点 (Ephemeral)</strong>：</p><ul><li>客户端断开连接后，节点会自动删除。</li></ul></li><li><p><strong>顺序节点 (Sequential)</strong>：</p><ul><li>在创建节点名后自动追加唯一编号，常用于唯一性标识。</li></ul></li></ol><hr><h2 id="_4-zookeeper-的运作机制" tabindex="-1"><a class="header-anchor" href="#_4-zookeeper-的运作机制"><span>4. ZooKeeper 的运作机制</span></a></h2><h3 id="分布式一致性协议" tabindex="-1"><a class="header-anchor" href="#分布式一致性协议"><span>分布式一致性协议</span></a></h3><p>ZooKeeper 基于 <strong>ZAB 协议</strong> (ZooKeeper Atomic Broadcast) 实现分布式一致性。</p><ul><li><strong>领导者 (Leader)</strong>：<br> 处理所有写操作。</li><li><strong>追随者 (Follower)</strong>：<br> 处理读请求，参与领导者选举。</li><li><strong>观察者 (Observer)</strong>：<br> 不参与投票，但同步数据，提升读性能。</li></ul><h3 id="数据模型" tabindex="-1"><a class="header-anchor" href="#数据模型"><span>数据模型</span></a></h3><p>ZooKeeper 使用树形结构存储数据，类似文件系统：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>/</span></span>
<span class="line"><span>├── app1</span></span>
<span class="line"><span>│   ├── config</span></span>
<span class="line"><span>│   └── workers</span></span>
<span class="line"><span>├── app2</span></span>
<span class="line"><span>    └── task-queue</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_5-zookeeper-的常用命令" tabindex="-1"><a class="header-anchor" href="#_5-zookeeper-的常用命令"><span>5. ZooKeeper 的常用命令</span></a></h2><p>连接到 ZooKeeper：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/zkCli.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:2181</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作"><span>基本操作</span></a></h3><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td><code>create /path data</code></td><td>创建节点并写入数据</td></tr><tr><td><code>get /path</code></td><td>获取节点数据</td></tr><tr><td><code>set /path data</code></td><td>更新节点数据</td></tr><tr><td><code>delete /path</code></td><td>删除节点</td></tr><tr><td><code>ls /path</code></td><td>列出子节点</td></tr><tr><td><code>stat /path</code></td><td>查看节点状态信息</td></tr></tbody></table><p>示例：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建节点</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /example</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取节点数据</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /example</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 更新节点数据</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /example</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;world&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_6-java-中的-zookeeper-客户端" tabindex="-1"><a class="header-anchor" href="#_6-java-中的-zookeeper-客户端"><span>6. Java 中的 ZooKeeper 客户端</span></a></h2><h3 id="maven-依赖" tabindex="-1"><a class="header-anchor" href="#maven-依赖"><span>Maven 依赖</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.apache.zookeeper&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;zookeeper&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;3.8.0&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java-示例代码" tabindex="-1"><a class="header-anchor" href="#java-示例代码"><span>Java 示例代码</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.apache.zookeeper.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ZookeeperExample</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        ZooKeeper</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> zk</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ZooKeeper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;127.0.0.1:2181&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 创建节点</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        zk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/example&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ZooDefs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Ids</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">OPEN_ACL_UNSAFE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">CreateMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">PERSISTENT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 获取数据</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;">        byte</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> zk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/example&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        zk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_7-zookeeper-的典型应用场景" tabindex="-1"><a class="header-anchor" href="#_7-zookeeper-的典型应用场景"><span>7. ZooKeeper 的典型应用场景</span></a></h2><h3 id="_7-1-分布式锁" tabindex="-1"><a class="header-anchor" href="#_7-1-分布式锁"><span>7.1 分布式锁</span></a></h3><p>使用临时顺序节点实现分布式锁，确保只有一个客户端持有锁。</p><h3 id="_7-2-服务注册与发现" tabindex="-1"><a class="header-anchor" href="#_7-2-服务注册与发现"><span>7.2 服务注册与发现</span></a></h3><p>服务实例向 ZooKeeper 注册节点，客户端通过监听节点变化动态发现服务。</p><h3 id="_7-3-分布式配置管理" tabindex="-1"><a class="header-anchor" href="#_7-3-分布式配置管理"><span>7.3 分布式配置管理</span></a></h3><p>使用 ZNode 存储配置信息，所有应用实时同步读取和监控配置。</p><h3 id="_7-4-分布式队列" tabindex="-1"><a class="header-anchor" href="#_7-4-分布式队列"><span>7.4 分布式队列</span></a></h3><p>利用顺序节点实现分布式任务队列，保证消息的顺序与消费。</p><hr><h2 id="_8-zookeeper-集群管理" tabindex="-1"><a class="header-anchor" href="#_8-zookeeper-集群管理"><span>8. ZooKeeper 集群管理</span></a></h2><h3 id="集群配置" tabindex="-1"><a class="header-anchor" href="#集群配置"><span>集群配置</span></a></h3><p><code>zoo.cfg</code> 示例：</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">tickTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">2000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">initLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">5</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">syncLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">2</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">dataDir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">/var/lib/zookeeper</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">clientPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">2181</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">server.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">192.168.1.1:2888:3888</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">server.2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">192.168.1.2:2888:3888</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">server.3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">192.168.1.3:2888:3888</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="集群节点角色" tabindex="-1"><a class="header-anchor" href="#集群节点角色"><span>集群节点角色</span></a></h3><table><thead><tr><th>节点角色</th><th>描述</th></tr></thead><tbody><tr><td>Leader</td><td>负责处理写操作，分发更新到 Follower。</td></tr><tr><td>Follower</td><td>服务于读请求，与 Leader 同步数据。</td></tr><tr><td>Observer</td><td>不参与选举，提升读性能。</td></tr></tbody></table><hr><h2 id="_9-zookeeper-的高级功能" tabindex="-1"><a class="header-anchor" href="#_9-zookeeper-的高级功能"><span>9. ZooKeeper 的高级功能</span></a></h2><h3 id="watch-机制" tabindex="-1"><a class="header-anchor" href="#watch-机制"><span>Watch 机制</span></a></h3><p>通过 <code>Watcher</code> 注册监听器，当节点发生数据变化时触发通知。</p><p>Java 示例：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">zk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/example&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, event </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Event triggered: &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="acl-权限控制" tabindex="-1"><a class="header-anchor" href="#acl-权限控制"><span>ACL 权限控制</span></a></h3><p>ZooKeeper 支持访问控制列表（ACL），定义节点的访问权限。</p><p>权限类型：</p><ul><li><strong>CREATE</strong>：创建子节点。</li><li><strong>READ</strong>：读取节点数据。</li><li><strong>WRITE</strong>：更新节点数据。</li></ul><hr><h2 id="_10-zookeeper-常见问题与优化" tabindex="-1"><a class="header-anchor" href="#_10-zookeeper-常见问题与优化"><span>10. ZooKeeper 常见问题与优化</span></a></h2><h3 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h3><ol><li><p><strong>脑裂问题</strong>：</p><ul><li>原因：集群分区后各分支认为自己是 Leader。</li><li>解决：设置奇数节点数，避免长时间分区。</li></ul></li><li><p><strong>性能问题</strong>：</p><ul><li>定期清理事务日志和快照数据。</li><li>增加 Observer 节点提升读请求性能。</li></ul></li></ol><h3 id="优化建议" tabindex="-1"><a class="header-anchor" href="#优化建议"><span>优化建议</span></a></h3><ul><li><strong>合理配置集群节点数</strong>： <ul><li>通常为 3 或 5 个节点。</li></ul></li><li><strong>数据存储优化</strong>： <ul><li>使用快速磁盘存储 <code>dataDir</code> 数据。</li></ul></li><li><strong>网络延迟监控</strong>： <ul><li>集群节点间网络延迟不宜过高。</li></ul></li></ul><hr><h2 id="_11-总结" tabindex="-1"><a class="header-anchor" href="#_11-总结"><span>11. 总结</span></a></h2><p>ZooKeeper 是分布式系统中的关键协调工具，它通过强一致性协议和高可靠性支持了分布式应用的高效运作。掌握 ZooKeeper 的核心功能和操作手册，将有助于在分布式开发中构建健壮的系统。如果想深入学习，请参考 <a href="https://zookeeper.apache.org/" target="_blank" rel="noopener noreferrer">ZooKeeper 官方文档</a>。实践出真知，开始搭建属于你的 ZooKeeper 集群吧！</p>`,77))])}const o=e(h,[["render",r],["__file","Zookeeper知识点.html.vue"]]),g=JSON.parse('{"path":"/article/Linux/Zookeeper%E7%9F%A5%E8%AF%86%E7%82%B9.html","title":"ZooKeeper知识点","lang":"zh-CN","frontmatter":{"title":"ZooKeeper知识点","category":["Linux"],"tag":["Zookeeper"],"description":"ZooKeeper 是一个分布式协调服务，主要用于保证分布式系统中关键功能的一致性，如分布式锁、服务注册与发现等。它由 Apache 基金会维护，经常被用作分布式系统的基础组件。 本文系统整理了 Zookeeper 的核心概念、命令操作及常见应用场景，帮助你从零开始理解和使用 ZooKeeper。","head":[["meta",{"property":"og:url","content":"https://java-st.blog.csdn.net/my-blog/article/Linux/Zookeeper%E7%9F%A5%E8%AF%86%E7%82%B9.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"ZooKeeper知识点"}],["meta",{"property":"og:description","content":"ZooKeeper 是一个分布式协调服务，主要用于保证分布式系统中关键功能的一致性，如分布式锁、服务注册与发现等。它由 Apache 基金会维护，经常被用作分布式系统的基础组件。 本文系统整理了 Zookeeper 的核心概念、命令操作及常见应用场景，帮助你从零开始理解和使用 ZooKeeper。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-27T03:26:46.000Z"}],["meta",{"property":"article:tag","content":"Zookeeper"}],["meta",{"property":"article:modified_time","content":"2025-02-27T03:26:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ZooKeeper知识点\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-27T03:26:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"宋涛\\",\\"url\\":\\"https://java-st.blog.csdn.net/\\"}]}"]]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"1. ZooKeeper 简介","slug":"_1-zookeeper-简介","link":"#_1-zookeeper-简介","children":[{"level":3,"title":"什么是 ZooKeeper？","slug":"什么是-zookeeper","link":"#什么是-zookeeper","children":[]}]},{"level":2,"title":"2. ZooKeeper 安装与配置","slug":"_2-zookeeper-安装与配置","link":"#_2-zookeeper-安装与配置","children":[{"level":3,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[]},{"level":3,"title":"配置单机模式","slug":"配置单机模式","link":"#配置单机模式","children":[]}]},{"level":2,"title":"3. ZooKeeper 的核心概念","slug":"_3-zookeeper-的核心概念","link":"#_3-zookeeper-的核心概念","children":[{"level":3,"title":"ZNode 类型","slug":"znode-类型","link":"#znode-类型","children":[]}]},{"level":2,"title":"4. ZooKeeper 的运作机制","slug":"_4-zookeeper-的运作机制","link":"#_4-zookeeper-的运作机制","children":[{"level":3,"title":"分布式一致性协议","slug":"分布式一致性协议","link":"#分布式一致性协议","children":[]},{"level":3,"title":"数据模型","slug":"数据模型","link":"#数据模型","children":[]}]},{"level":2,"title":"5. ZooKeeper 的常用命令","slug":"_5-zookeeper-的常用命令","link":"#_5-zookeeper-的常用命令","children":[{"level":3,"title":"基本操作","slug":"基本操作","link":"#基本操作","children":[]}]},{"level":2,"title":"6. Java 中的 ZooKeeper 客户端","slug":"_6-java-中的-zookeeper-客户端","link":"#_6-java-中的-zookeeper-客户端","children":[{"level":3,"title":"Maven 依赖","slug":"maven-依赖","link":"#maven-依赖","children":[]},{"level":3,"title":"Java 示例代码","slug":"java-示例代码","link":"#java-示例代码","children":[]}]},{"level":2,"title":"7. ZooKeeper 的典型应用场景","slug":"_7-zookeeper-的典型应用场景","link":"#_7-zookeeper-的典型应用场景","children":[{"level":3,"title":"7.1 分布式锁","slug":"_7-1-分布式锁","link":"#_7-1-分布式锁","children":[]},{"level":3,"title":"7.2 服务注册与发现","slug":"_7-2-服务注册与发现","link":"#_7-2-服务注册与发现","children":[]},{"level":3,"title":"7.3 分布式配置管理","slug":"_7-3-分布式配置管理","link":"#_7-3-分布式配置管理","children":[]},{"level":3,"title":"7.4 分布式队列","slug":"_7-4-分布式队列","link":"#_7-4-分布式队列","children":[]}]},{"level":2,"title":"8. ZooKeeper 集群管理","slug":"_8-zookeeper-集群管理","link":"#_8-zookeeper-集群管理","children":[{"level":3,"title":"集群配置","slug":"集群配置","link":"#集群配置","children":[]},{"level":3,"title":"集群节点角色","slug":"集群节点角色","link":"#集群节点角色","children":[]}]},{"level":2,"title":"9. ZooKeeper 的高级功能","slug":"_9-zookeeper-的高级功能","link":"#_9-zookeeper-的高级功能","children":[{"level":3,"title":"Watch 机制","slug":"watch-机制","link":"#watch-机制","children":[]},{"level":3,"title":"ACL 权限控制","slug":"acl-权限控制","link":"#acl-权限控制","children":[]}]},{"level":2,"title":"10. ZooKeeper 常见问题与优化","slug":"_10-zookeeper-常见问题与优化","link":"#_10-zookeeper-常见问题与优化","children":[{"level":3,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]},{"level":3,"title":"优化建议","slug":"优化建议","link":"#优化建议","children":[]}]},{"level":2,"title":"11. 总结","slug":"_11-总结","link":"#_11-总结","children":[]}],"git":{"createdTime":1740584260000,"updatedTime":1740626806000,"contributors":[{"name":"stao","username":"stao","email":"2944922490@qq.com","commits":4,"url":"https://github.com/stao"}]},"readingTime":{"minutes":5.2,"words":1560},"filePathRelative":"article/Linux/Zookeeper知识点.md","localizedDate":"2025年2月26日","excerpt":"<p>ZooKeeper 是一个分布式协调服务，主要用于保证分布式系统中关键功能的一致性，如分布式锁、服务注册与发现等。它由 Apache 基金会维护，经常被用作分布式系统的基础组件。</p>\\n<p>本文系统整理了 Zookeeper 的核心概念、命令操作及常见应用场景，帮助你从零开始理解和使用 ZooKeeper。</p>\\n","autoDesc":true}');export{o as comp,g as data};
