import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as a,a as l,b as e,o as t}from"./app-BImRTQmU.js";const r={};function p(d,s){return t(),n("div",null,[s[0]||(s[0]=a("p",null,"离散数学个人笔记",-1)),l(" more "),s[1]||(s[1]=e(`<h2 id="_1-命题逻辑" tabindex="-1"><a class="header-anchor" href="#_1-命题逻辑"><span>1.命题逻辑</span></a></h2><h3 id="_1-1-概念" tabindex="-1"><a class="header-anchor" href="#_1-1-概念"><span>1.1 概念</span></a></h3><p>命题：具有唯一真值的陈述句</p><p>原子命题：不可分解的命题</p><p>复合命题：命题可以分解。原子命题+逻辑联结词</p><h3 id="_1-2-联结词" tabindex="-1"><a class="header-anchor" href="#_1-2-联结词"><span>1.2 联结词</span></a></h3><table><thead><tr><th><strong>名称</strong></th><th><strong>符号</strong></th><th><strong>定义规则</strong></th><th><strong>真值表</strong></th></tr></thead><tbody><tr><td>否定</td><td>¬</td><td>否定一个命题 (p)，即将其真假值取反。</td><td>| (p) | ¬(p) | <br>| <strong>T</strong> | <strong>F</strong> |<br> | <strong>F</strong> | <strong>T</strong> |</td></tr><tr><td>合取</td><td>∧</td><td>(p ∧ q) 表示“(p) 和 (q) 都为真”。</td><td>| (p) | (q) | (p ∧ q) | <br> | <strong>T</strong> | <strong>T</strong> | <strong>T</strong> | <br>| <strong>T</strong> | <strong>F</strong> | <strong>F</strong> | <br> | <strong>F</strong> | <strong>T</strong> | <strong>F</strong> | <br> | <strong>F</strong> | <strong>F</strong> | <strong>F</strong> |</td></tr><tr><td>析取</td><td>∨</td><td>(p ∨ q) 表示“(p) 或 (q) 至少有一个为真”。</td><td>| (p) | (q) | (p ∨ q) | <br> | <strong>T</strong> | <strong>T</strong> | <strong>T</strong> | <br>| <strong>T</strong> | <strong>F</strong> | <strong>T</strong> | <br> | <strong>F</strong> | <strong>T</strong> | <strong>T</strong> | <br> | <strong>F</strong> | <strong>F</strong> | <strong>F</strong> |</td></tr><tr><td>蕴含</td><td>→</td><td>(p → q) 表示“如果 (p)，那么 (q)”。只有当 (p) 为真且 (q) 为假时为假。</td><td>| (p) | (q) | (p → q) | <br> | <strong>T</strong> | <strong>T</strong> | <strong>T</strong> | <br>| <strong>T</strong> | <strong>F</strong> | <strong>F</strong> | <br> | <strong>F</strong> | <strong>T</strong> | <strong>T</strong> | <br> | <strong>F</strong> | <strong>F</strong> | <strong>T</strong> |</td></tr><tr><td>等价</td><td>↔</td><td>(p ↔ q) 表示“(p) 当且仅当 (q)”。 (p) 和 (q) 真假值相同时为真。</td><td>| (p) | (q) | (p ↔ q) | <br> | <strong>T</strong> | <strong>T</strong> | <strong>T</strong> | <br>| <strong>T</strong> | <strong>F</strong> | <strong>F</strong> | <br> | <strong>F</strong> | <strong>T</strong> | <strong>F</strong> | <br> | <strong>F</strong> | <strong>F</strong> | <strong>T</strong> |</td></tr><tr><td>异或</td><td>⊕</td><td>(p ⊕ q) 表示“(p) 和 (q) 的真假值不同”。</td><td>| (p) | (q) | (p ⊕ q) | <br> | <strong>T</strong> | <strong>T</strong> | <strong>F</strong> | <br>| <strong>T</strong> | <strong>F</strong> | <strong>T</strong> | <br> | <strong>F</strong> | <strong>T</strong> | <strong>T</strong> | <br> | <strong>F</strong> | <strong>F</strong> | <strong>F</strong> |</td></tr></tbody></table><h3 id="_1-3-公式" tabindex="-1"><a class="header-anchor" href="#_1-3-公式"><span>1.3 公式</span></a></h3><p>成真指派：若指定的一种指派使假题的值为真，则称这组值为命题的成真指派<br> 成假指派：若指定的一种指派使命题的值为假，则称这组值为命题的成假指派</p><p>公式类型：永真式（重言式）、可满足式、永假式（矛盾式）</p><h3 id="_1-4-逻辑等值演算" tabindex="-1"><a class="header-anchor" href="#_1-4-逻辑等值演算"><span>1.4 逻辑等值演算</span></a></h3><p>以下是离散数学中<strong>基本等值式</strong>的内容，使用 Markdown 格式编写。等值式在命题逻辑中非常重要，用于简化逻辑表达式或证明逻辑等价。</p><hr><h1 id="基本等值式" tabindex="-1"><a class="header-anchor" href="#基本等值式"><span><strong>基本等值式</strong></span></a></h1><p>在离散数学中，基本等值式定义了逻辑运算之间的关系。这些等值式通过运算性质展示命题之间的逻辑等价，是逻辑推理和运算简化的基础。</p><hr><h2 id="_1-双重否定律-double-negation-law" tabindex="-1"><a class="header-anchor" href="#_1-双重否定律-double-negation-law"><span><strong>1. 双重否定律 (Double Negation Law)</strong></span></a></h2><p>[<br> \\neg(\\neg p) \\equiv p<br> ]<br> 否定一个命题两次后，结果与原命题相等。</p><hr><h2 id="_2-幺元律-identity-law" tabindex="-1"><a class="header-anchor" href="#_2-幺元律-identity-law"><span><strong>2. 幺元律 (Identity Law)</strong></span></a></h2><p>[<br> p \\land \\text{True} \\equiv p<br> ]</p><p>[<br> p \\lor \\text{False} \\equiv p<br> ]</p><ul><li>&quot;与 True 合取&quot;等于原命题。</li><li>&quot;与 False 析取&quot;等于原命题。</li></ul><hr><h2 id="_3-零元律-domination-law" tabindex="-1"><a class="header-anchor" href="#_3-零元律-domination-law"><span><strong>3. 零元律 (Domination Law)</strong></span></a></h2><p>[<br> p \\land \\text{False} \\equiv \\text{False}<br> ]</p><p>[<br> p \\lor \\text{True} \\equiv \\text{True}<br> ]</p><ul><li>&quot;与 False 合取&quot;永远为 False。</li><li>&quot;与 True 析取&quot;永远为 True。</li></ul><hr><h2 id="_4-交换律-commutative-law" tabindex="-1"><a class="header-anchor" href="#_4-交换律-commutative-law"><span><strong>4. 交换律 (Commutative Law)</strong></span></a></h2><p>[<br> p \\land q \\equiv q \\land p<br> ]</p><p>[<br> p \\lor q \\equiv q \\lor p<br> ]<br> 逻辑运算中的合取（(\\land)）和析取（(\\lor)）是可交换的。</p><hr><h2 id="_5-结合律-associative-law" tabindex="-1"><a class="header-anchor" href="#_5-结合律-associative-law"><span><strong>5. 结合律 (Associative Law)</strong></span></a></h2><p>[<br> (p \\land q) \\land r \\equiv p \\land (q \\land r)<br> ]</p><p>[<br> (p \\lor q) \\lor r \\equiv p \\lor (q \\lor r)<br> ]<br> 逻辑运算的合取和析取可以改变括号的分组顺序而不影响结果。</p><hr><h2 id="_6-分配律-distributive-law" tabindex="-1"><a class="header-anchor" href="#_6-分配律-distributive-law"><span><strong>6. 分配律 (Distributive Law)</strong></span></a></h2><p>[<br> p \\land (q \\lor r) \\equiv (p \\land q) \\lor (p \\land r)<br> ]</p><p>[<br> p \\lor (q \\land r) \\equiv (p \\lor q) \\land (p \\lor r)<br> ]<br> 类似于代数中的分配律，逻辑合取和析取运算可以分配。</p><hr><h2 id="_7-吸收律-absorption-law" tabindex="-1"><a class="header-anchor" href="#_7-吸收律-absorption-law"><span><strong>7. 吸收律 (Absorption Law)</strong></span></a></h2><p>[<br> p \\lor (p \\land q) \\equiv p<br> ]</p><p>[<br> p \\land (p \\lor q) \\equiv p<br> ]<br> 通过吸收操作简化表达式。</p><hr><h2 id="_8-德摩根律-de-morgan-s-laws" tabindex="-1"><a class="header-anchor" href="#_8-德摩根律-de-morgan-s-laws"><span><strong>8. 德摩根律 (De Morgan&#39;s Laws)</strong></span></a></h2><p>[<br> \\neg(p \\land q) \\equiv (\\neg p) \\lor (\\neg q)<br> ]</p><p>[<br> \\neg(p \\lor q) \\equiv (\\neg p) \\land (\\neg q)<br> ]<br> 否定合取等于否定两个命题并通过析取连接，否定析取等于否定两个命题并通过合取连接。</p><hr><h2 id="_9-双条件定义-biconditional-definition" tabindex="-1"><a class="header-anchor" href="#_9-双条件定义-biconditional-definition"><span><strong>9. 双条件定义 (Biconditional Definition)</strong></span></a></h2><p>[<br> p \\leftrightarrow q \\equiv (p \\land q) \\lor (\\neg p \\land \\neg q)<br> ]<br> 一个双条件等于两个命题均为真或均为假的情况。</p><hr><h2 id="_10-蕴含定义-implication-definition" tabindex="-1"><a class="header-anchor" href="#_10-蕴含定义-implication-definition"><span><strong>10. 蕴含定义 (Implication Definition)</strong></span></a></h2><p>[<br> p \\to q \\equiv \\neg p \\lor q<br> ]<br> (p \\to q) 表示 &quot;如果 (p)，则 (q)&quot;，其等价于&quot;(\\neg p) 或 (q)&quot;。</p><hr><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span><strong>总结</strong></span></a></h2><p>基本等值式是逻辑代数的核心部分，帮助我们简化复杂的逻辑表达式。以下是一些重要的等值式：</p><ul><li>双重否定律</li><li>幺元律</li><li>零元律</li><li>交换律</li><li>结合律</li><li>分配律</li><li>吸收律</li><li>德摩根律</li><li>双条件定义</li><li>蕴含定义</li></ul><p>通过这些等值式，可以高效地进行逻辑推导、化简或证明。</p><hr><h2 id="markdown-代码示例" tabindex="-1"><a class="header-anchor" href="#markdown-代码示例"><span>Markdown 代码示例</span></a></h2><p>以下是上述内容的 Markdown 格式代码：</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># </span><span style="--shiki-light:#986801;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit;">**基本等值式**</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">在离散数学中，基本等值式定义了逻辑运算之间的关系。这些等值式通过运算性质展示命题之间的逻辑等价，是逻辑推理和运算简化的基础。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#986801;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit;">**1. 双重否定律 (Double Negation Law)**</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\neg(\\neg p) \\equiv p</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">否定一个命题两次后，结果与原命题相等。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#986801;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit;">**2. 幺元律 (Identity Law)**</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\land \\text{True} \\equiv p</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\lor \\text{False} \\equiv p</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &quot;与 True 合取&quot;等于原命题。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &quot;与 False 析取&quot;等于原命题。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#986801;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit;">**3. 零元律 (Domination Law)**</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\land \\text{False} \\equiv \\text{False}</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\lor \\text{True} \\equiv \\text{True}</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &quot;与 False 合取&quot;永远为 False。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &quot;与 True 析取&quot;永远为 True。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#986801;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit;">**4. 交换律 (Commutative Law)**</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\land q \\equiv q \\land p</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\lor q \\equiv q \\lor p</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">逻辑运算中的合取（</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\land</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">）和析取（</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\lor</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">）是可交换的。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#986801;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit;">**5. 结合律 (Associative Law)**</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(p \\land q) \\land r \\equiv p \\land (q \\land r)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(p \\lor q) \\lor r \\equiv p \\lor (q \\lor r)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">逻辑运算的合取和析取可以改变括号的分组顺序而不影响结果。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#986801;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit;">**6. 分配律 (Distributive Law)**</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\land (q \\lor r) \\equiv (p \\land q) \\lor (p \\land r)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\lor (q \\land r) \\equiv (p \\lor q) \\land (p \\lor r)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">类似于代数中的分配律，逻辑合取和析取运算可以分配。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#986801;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit;">**7. 吸收律 (Absorption Law)**</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\lor (p \\land q) \\equiv p</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\land (p \\lor q) \\equiv p</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">通过吸收操作简化表达式。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#986801;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit;">**8. 德摩根律 (De Morgan&#39;s Laws)**</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\neg(p \\land q) \\equiv (\\neg p) \\lor (\\neg q)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\neg(p \\lor q) \\equiv (\\neg p) \\land (\\neg q)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">否定合取等于否定两个命题并通过析取连接，否定析取等于否定两个命题并通过合取连接。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#986801;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit;">**9. 双条件定义 (Biconditional Definition)**</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\leftrightarrow q \\equiv (p \\land q) \\lor (\\neg p \\land \\neg q)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">一个双条件等于两个命题均为真或均为假的情况。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit;">**蕴含定义**</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\to q \\equiv \\neg p \\lor q</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\]</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p \\to q</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表示 &quot;如果 </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">，则 </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">q</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;，其等价于&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\neg p</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 或 </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">q</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## 2.谓词逻辑</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## 3.集合与关系</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## 4.函数</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## 5.图</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## 6.树</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## 7.代数系统</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,63))])}const k=i(r,[["render",p],["__file","笔记.html.vue"]]),g=JSON.parse(`{"path":"/article/%E7%90%86%E8%AE%BA/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E7%AC%94%E8%AE%B0.html","title":"离散数学笔记","lang":"zh-CN","frontmatter":{"title":"离散数学笔记","category":["理论"],"description":"离散数学个人笔记","head":[["meta",{"property":"og:url","content":"https://java-st.blog.csdn.net/my-blog/article/%E7%90%86%E8%AE%BA/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"离散数学笔记"}],["meta",{"property":"og:description","content":"离散数学个人笔记"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-09T06:32:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-09T06:32:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"离散数学笔记\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-09T06:32:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"宋涛\\",\\"url\\":\\"https://java-st.blog.csdn.net/\\"}]}"]]},"headers":[{"level":2,"title":"1.命题逻辑","slug":"_1-命题逻辑","link":"#_1-命题逻辑","children":[{"level":3,"title":"1.1 概念","slug":"_1-1-概念","link":"#_1-1-概念","children":[]},{"level":3,"title":"1.2 联结词","slug":"_1-2-联结词","link":"#_1-2-联结词","children":[]},{"level":3,"title":"1.3 公式","slug":"_1-3-公式","link":"#_1-3-公式","children":[]},{"level":3,"title":"1.4 逻辑等值演算","slug":"_1-4-逻辑等值演算","link":"#_1-4-逻辑等值演算","children":[]}]},{"level":2,"title":"1. 双重否定律 (Double Negation Law)","slug":"_1-双重否定律-double-negation-law","link":"#_1-双重否定律-double-negation-law","children":[]},{"level":2,"title":"2. 幺元律 (Identity Law)","slug":"_2-幺元律-identity-law","link":"#_2-幺元律-identity-law","children":[]},{"level":2,"title":"3. 零元律 (Domination Law)","slug":"_3-零元律-domination-law","link":"#_3-零元律-domination-law","children":[]},{"level":2,"title":"4. 交换律 (Commutative Law)","slug":"_4-交换律-commutative-law","link":"#_4-交换律-commutative-law","children":[]},{"level":2,"title":"5. 结合律 (Associative Law)","slug":"_5-结合律-associative-law","link":"#_5-结合律-associative-law","children":[]},{"level":2,"title":"6. 分配律 (Distributive Law)","slug":"_6-分配律-distributive-law","link":"#_6-分配律-distributive-law","children":[]},{"level":2,"title":"7. 吸收律 (Absorption Law)","slug":"_7-吸收律-absorption-law","link":"#_7-吸收律-absorption-law","children":[]},{"level":2,"title":"8. 德摩根律 (De Morgan's Laws)","slug":"_8-德摩根律-de-morgan-s-laws","link":"#_8-德摩根律-de-morgan-s-laws","children":[]},{"level":2,"title":"9. 双条件定义 (Biconditional Definition)","slug":"_9-双条件定义-biconditional-definition","link":"#_9-双条件定义-biconditional-definition","children":[]},{"level":2,"title":"10. 蕴含定义 (Implication Definition)","slug":"_10-蕴含定义-implication-definition","link":"#_10-蕴含定义-implication-definition","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"Markdown 代码示例","slug":"markdown-代码示例","link":"#markdown-代码示例","children":[]}],"git":{"createdTime":1744180374000,"updatedTime":1744180374000,"contributors":[{"name":"stao","username":"stao","email":"2944922490@qq.com","commits":1,"url":"https://github.com/stao"}]},"readingTime":{"minutes":5.2,"words":1560},"filePathRelative":"article/理论/离散数学/笔记.md","localizedDate":"2025年4月9日","excerpt":"<p>离散数学个人笔记</p>\\n","autoDesc":true}`);export{k as comp,g as data};
