import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as s,a as l,b as e,o as t}from"./app-BImRTQmU.js";const h={};function p(k,i){return t(),n("div",null,[i[0]||(i[0]=s("p",null,"在分布式系统中，微服务之间的调用链路可能非常复杂。为了更好地监控和追踪请求链路，Spring Cloud 提供了分布式 tracing（分布式链路追踪）组件 Sleuth。它主要用于生成唯一的追踪 ID，记录服务间调用关系，为性能监控和问题排查提供强有力的支持。",-1)),i[1]||(i[1]=s("p",null,"Spring Cloud Alibaba 通过与 Spring Cloud Sleuth 的整合，可以方便地实现服务链路追踪，并与 Zipkin 或 SkyWalking 等工具配合使用，轻松实现跨服务的链路跟踪。",-1)),l(" more "),i[2]||(i[2]=e(`<h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><ol><li><a href="#1-%E4%BB%80%E4%B9%88%E6%98%AF-spring-cloud-sleuth">什么是 Spring Cloud Sleuth</a></li><li><a href="#2-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87">环境准备</a></li><li><a href="#3-%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96%E4%B8%8E%E9%85%8D%E7%BD%AE">项目依赖与配置</a></li><li><a href="#4-%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA%E5%AE%9E%E7%8E%B0">链路追踪实现</a></li><li><a href="#5-%E4%B8%8E-zipkin-%E9%9B%86%E6%88%90">与 Zipkin 集成</a></li><li><a href="#6-%E6%80%BB%E7%BB%93">总结</a></li></ol><hr><h2 id="_1-什么是-spring-cloud-sleuth" tabindex="-1"><a class="header-anchor" href="#_1-什么是-spring-cloud-sleuth"><span>1. 什么是 Spring Cloud Sleuth</span></a></h2><p>Spring Cloud Sleuth 是 Spring Cloud 的分布式跟踪解决方案，它会在微服务调用的每个请求中添加唯一的 <strong>Trace ID</strong> 和 <strong>Span ID</strong>：</p><ul><li><strong>Trace ID</strong>：贯穿整个分布式请求链路的唯一标识，用于标识一条完整的链路。</li><li><strong>Span ID</strong>：表示链路中每个微服务之间的一个调用单元，用于标识链路中的每一段通信。</li></ul><p>通过 Sleuth，能够方便地追踪一条请求经过的服务路径、调用耗时，直观找到性能瓶颈或错误节点。</p><hr><h2 id="_2-环境准备" tabindex="-1"><a class="header-anchor" href="#_2-环境准备"><span>2. 环境准备</span></a></h2><p>在开始之前，请确保以下环境和工具已安装：</p><ul><li><strong>JDK 1.8+</strong></li><li><strong>Spring Boot 2.6+</strong>（环境支持 Spring Cloud）。</li><li>（可选）<strong>Zipkin Server</strong> 或 <strong>SkyWalking</strong> 系统，用于保存和检索链路数据。</li></ul><hr><h2 id="_3-项目依赖与配置" tabindex="-1"><a class="header-anchor" href="#_3-项目依赖与配置"><span>3. 项目依赖与配置</span></a></h2><h3 id="_3-1-添加必要的依赖" tabindex="-1"><a class="header-anchor" href="#_3-1-添加必要的依赖"><span>3.1 添加必要的依赖</span></a></h3><p>在微服务项目的 <code>pom.xml</code> 文件中添加如下依赖：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &lt;!-- Spring Cloud Sleuth --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.cloud&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-cloud-starter-sleuth&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &lt;!-- Spring Cloud Alibaba Nacos Discovery --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;com.alibaba.cloud&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &lt;!-- Optional: Spring Cloud Sleuth Zipkin 集成 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.cloud&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-cloud-sleuth-zipkin&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-配置-nacos-服务发现" tabindex="-1"><a class="header-anchor" href="#_3-2-配置-nacos-服务发现"><span>3.2 配置 Nacos 服务发现</span></a></h3><p>在 <code>application.yml</code> 文件中，配置 Nacos 服务注册和发现功能：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sleuth-test-service</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 当前微服务名称</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    nacos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      discovery</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        server-addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">localhost:8848</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # Nacos 服务地址</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  sleuth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    sampler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      probability</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 设置 Sleuth 采样概率，1.0 表示全部采样</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里设置 <strong>Sampler 的采样率为 100%</strong>，以便每个请求都生成追踪数据。</p><hr><h2 id="_4-链路追踪实现" tabindex="-1"><a class="header-anchor" href="#_4-链路追踪实现"><span>4. 链路追踪实现</span></a></h2><h3 id="_4-1-使用-resttemplate-进行服务调用链路追踪" tabindex="-1"><a class="header-anchor" href="#_4-1-使用-resttemplate-进行服务调用链路追踪"><span>4.1 使用 RestTemplate 进行服务调用链路追踪</span></a></h3><p>定义一个 <code>RestTemplate</code>，并通过 <code>@LoadBalanced</code> 支持负载均衡：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> RestTemplateConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">LoadBalanced</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> RestTemplate</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> restTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> RestTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在接口 Controller 中调用下游微服务：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">RestController</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">RequestMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/api&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ApiController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> RestTemplate</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> restTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">GetMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/call-other&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> callOtherService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 使用服务名调用下游服务，自动携带 TraceID 和 SpanID</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> restTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getForObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://other-service/api/response&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-自动携带链路信息" tabindex="-1"><a class="header-anchor" href="#_4-2-自动携带链路信息"><span>4.2 自动携带链路信息</span></a></h3><p>在两台微服务之间的调用过程中，Sleuth 会自动携带 <strong>Trace ID</strong> 和 <strong>Span ID</strong>。比如，当 <code>sleuth-test-service</code> 调用 <code>other-service</code> 时，日志中会自动输出类似以下内容：</p><ul><li><p><strong>sleuth-test-service（上游服务）</strong>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[TRACE_ID:1234567890ABCDEF, SPAN_ID:789ABC] ---&gt; 调用服务：http://other-service/api/response</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>other-service（下游服务）</strong>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[TRACE_ID:1234567890ABCDEF, SPAN_ID:456DEF] ---&gt; 接收来自 sleuth-test-service 的请求</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>通过 Trace 和 Span ID，可以轻松定位请求在多个服务中的耗时分布。</p><hr><h2 id="_5-与-zipkin-集成" tabindex="-1"><a class="header-anchor" href="#_5-与-zipkin-集成"><span>5. 与 Zipkin 集成</span></a></h2><h3 id="_5-1-什么是-zipkin" tabindex="-1"><a class="header-anchor" href="#_5-1-什么是-zipkin"><span>5.1 什么是 Zipkin</span></a></h3><p><a href="https://zipkin.io/" target="_blank" rel="noopener noreferrer">Zipkin</a> 是一款强大的分布式追踪工具，可以存储和展示链路追踪数据，分析服务调用链路，定位性能瓶颈。Sleuth 可以将生成的追踪数据发送到 Zipkin Server 进行存储和展示。</p><h3 id="_5-2-启动-zipkin-server" tabindex="-1"><a class="header-anchor" href="#_5-2-启动-zipkin-server"><span>5.2 启动 Zipkin Server</span></a></h3><ol><li><p>下载并运行 Zipkin Server：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://zipkin.io/quickstart.sh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zipkin.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>默认访问地址：<a href="http://localhost:9411" target="_blank" rel="noopener noreferrer">http://localhost:9411</a></p></li></ol><h3 id="_5-3-配置-sleuth-集成-zipkin" tabindex="-1"><a class="header-anchor" href="#_5-3-配置-sleuth-集成-zipkin"><span>5.3 配置 Sleuth 集成 Zipkin</span></a></h3><p>修改项目中的 <code>application.yml</code> 文件，添加 Zipkin 配置：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  sleuth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    sampler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      probability</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 采样率设为100%，便于调试</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    zipkin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      base-url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">http://localhost:9411</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # Zipkin Server 地址</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  zipkin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    sender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">web</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，Sleuth 会将链路信息发送到 Zipkin Server，可以通过 Zipkin 的 UI 界面浏览具体的链路信息。</p><hr><h2 id="_6-总结" tabindex="-1"><a class="header-anchor" href="#_6-总结"><span>6. 总结</span></a></h2><p>通过 Spring Cloud Sleuth 和 Spring Cloud Alibaba 的结合，我们实现了分布式链路追踪的以下能力：</p><ul><li><strong>自动分配 Trace ID 和 Span ID</strong>：在微服务调用中携带唯一标识，精确定位请求链路。</li><li><strong>可视化分析</strong>：结合 Zipkin，可以清晰地展示请求流、服务调用链路和耗时信息。</li><li><strong>调用链路无侵入性</strong>：无需手动添加链路上下文，Sleuth 自动生成并传递链路信息。</li></ul><p>在现代微服务架构中，链路追踪对于定位性能瓶颈和故障排查非常重要，Sleuth 提供了开箱即用的解决方案，结合 Zipkin 等工具可进一步增强可观测性。</p>`,46))])}const g=a(h,[["render",p],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/article/Java/SpringCloudAlibaba/Sleuth/","title":"Sleuth","lang":"zh-CN","frontmatter":{"title":"Sleuth","category":["Java"],"tag":["SpringCloudAlibaba"],"description":"在分布式系统中，微服务之间的调用链路可能非常复杂。为了更好地监控和追踪请求链路，Spring Cloud 提供了分布式 tracing（分布式链路追踪）组件 Sleuth。它主要用于生成唯一的追踪 ID，记录服务间调用关系，为性能监控和问题排查提供强有力的支持。 Spring Cloud Alibaba 通过与 Spring Cloud Sleuth ...","head":[["meta",{"property":"og:url","content":"https://java-st.blog.csdn.net/my-blog/article/Java/SpringCloudAlibaba/Sleuth/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Sleuth"}],["meta",{"property":"og:description","content":"在分布式系统中，微服务之间的调用链路可能非常复杂。为了更好地监控和追踪请求链路，Spring Cloud 提供了分布式 tracing（分布式链路追踪）组件 Sleuth。它主要用于生成唯一的追踪 ID，记录服务间调用关系，为性能监控和问题排查提供强有力的支持。 Spring Cloud Alibaba 通过与 Spring Cloud Sleuth ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-27T13:18:40.000Z"}],["meta",{"property":"article:tag","content":"SpringCloudAlibaba"}],["meta",{"property":"article:modified_time","content":"2025-04-27T13:18:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Sleuth\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-27T13:18:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"宋涛\\",\\"url\\":\\"https://java-st.blog.csdn.net/\\"}]}"]]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"1. 什么是 Spring Cloud Sleuth","slug":"_1-什么是-spring-cloud-sleuth","link":"#_1-什么是-spring-cloud-sleuth","children":[]},{"level":2,"title":"2. 环境准备","slug":"_2-环境准备","link":"#_2-环境准备","children":[]},{"level":2,"title":"3. 项目依赖与配置","slug":"_3-项目依赖与配置","link":"#_3-项目依赖与配置","children":[{"level":3,"title":"3.1 添加必要的依赖","slug":"_3-1-添加必要的依赖","link":"#_3-1-添加必要的依赖","children":[]},{"level":3,"title":"3.2 配置 Nacos 服务发现","slug":"_3-2-配置-nacos-服务发现","link":"#_3-2-配置-nacos-服务发现","children":[]}]},{"level":2,"title":"4. 链路追踪实现","slug":"_4-链路追踪实现","link":"#_4-链路追踪实现","children":[{"level":3,"title":"4.1 使用 RestTemplate 进行服务调用链路追踪","slug":"_4-1-使用-resttemplate-进行服务调用链路追踪","link":"#_4-1-使用-resttemplate-进行服务调用链路追踪","children":[]},{"level":3,"title":"4.2 自动携带链路信息","slug":"_4-2-自动携带链路信息","link":"#_4-2-自动携带链路信息","children":[]}]},{"level":2,"title":"5. 与 Zipkin 集成","slug":"_5-与-zipkin-集成","link":"#_5-与-zipkin-集成","children":[{"level":3,"title":"5.1 什么是 Zipkin","slug":"_5-1-什么是-zipkin","link":"#_5-1-什么是-zipkin","children":[]},{"level":3,"title":"5.2 启动 Zipkin Server","slug":"_5-2-启动-zipkin-server","link":"#_5-2-启动-zipkin-server","children":[]},{"level":3,"title":"5.3 配置 Sleuth 集成 Zipkin","slug":"_5-3-配置-sleuth-集成-zipkin","link":"#_5-3-配置-sleuth-集成-zipkin","children":[]}]},{"level":2,"title":"6. 总结","slug":"_6-总结","link":"#_6-总结","children":[]}],"git":{"createdTime":1740562473000,"updatedTime":1745759920000,"contributors":[{"name":"stao","username":"stao","email":"2944922490@qq.com","commits":4,"url":"https://github.com/stao"}]},"readingTime":{"minutes":4.02,"words":1205},"filePathRelative":"article/Java/SpringCloudAlibaba/Sleuth/index.md","localizedDate":"2025年2月26日","excerpt":"<p>在分布式系统中，微服务之间的调用链路可能非常复杂。为了更好地监控和追踪请求链路，Spring Cloud 提供了分布式 tracing（分布式链路追踪）组件 Sleuth。它主要用于生成唯一的追踪 ID，记录服务间调用关系，为性能监控和问题排查提供强有力的支持。</p>\\n<p>Spring Cloud Alibaba 通过与 Spring Cloud Sleuth 的整合，可以方便地实现服务链路追踪，并与 Zipkin 或 SkyWalking 等工具配合使用，轻松实现跨服务的链路跟踪。</p>\\n","autoDesc":true}');export{g as comp,c as data};
